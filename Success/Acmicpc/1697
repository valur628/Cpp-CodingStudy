#include <iostream>
#include <stdio.h>
#include <queue>
#include <stack>

using namespace std;
int n, k;
int map[100001] = {0};
int visit[100001] = {0};

struct st{
    int a, b;
};

int main(void)
{
    cin >> n >> k;

    queue<st> q;
    q.push({0, n});
    visit[n] = 1;

    while(!q.empty())
    {
        int cnt = q.front().a;
        int pos = q.front().b;

        q.pop();

        if(pos == k)
        {
            cout << cnt;
            break;
        }

        if(!visit[pos+1])
        {
            q.push({cnt+1,pos+1});
            visit[pos+1]++;
        }
        if(pos-1>=0 && !visit[pos-1])
        {
            q.push({cnt+1,pos-1});
            visit[pos-1]++;
        }
        if(pos*2-k<=k-pos && !visit[pos*2])
        {
            q.push({cnt+1,pos*2});
            visit[pos*2]++;
        }
    }
}