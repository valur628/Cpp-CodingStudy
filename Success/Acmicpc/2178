#include <iostream>
#include <stdio.h>
#include <queue>
#include <stack>

using namespace std;
int n, m;
int map[101][101];
int visit[101][101];
int dx[4] = {0, 1, 0, -1};
int dy[4] = {1, 0, -1, 0};

struct st{
    int a, b, c;
};

int bfs()
{
    queue<st> q;
    
    q.push({0, 0, 1});
    visit[0][0] = 1;

    while(!q.empty())
    {
        int x = q.front().a;
        int y = q.front().b;
        int z = q.front().c;

        q.pop();

        if(x == m-1 && y == n-1)
            return z;

        for(int i = 0;i<4;i++)
        {
            int nx = x + dx[i];
            int ny = y + dy[i];

            if(nx < 0 || ny < 0 || nx >= m || ny >= n || visit[ny][nx] == 1 || map[ny][nx] != 1)
                continue;
            q.push({nx, ny,z+1});
            visit[ny][nx] = 1;
        }
    }
}   

int main(void)
{
    cin >> n >> m;

    for(int i = 0;i<n;i++)
    {
        for(int j = 0;j<m;j++)
        {
            scanf("%1d", &map[i][j]);
        }
    }
    cout << bfs();
}