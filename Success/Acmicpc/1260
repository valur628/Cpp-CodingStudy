#include <iostream>
#include <queue>
using namespace std;

int dx[4] = {1, 0, -1, 0};
int dy[4] = {0, 1, 0, -1};
bool node[1001][1001];
bool visit[1001];
int N, M, V, x, y;
queue<int> q;

void dfs(int v)
{
    cout << v << " ";
    visit[v] = true;

    for(int i = 1;i<=N;i++)
    {
        if(visit[i] == true || node[v][i] == false)
            continue;
        dfs(i);
    }
}
void bfs(int v)
{
    q.push(v);
    visit[v] = false;
    while(!q.empty())
    {
        v = q.front();
        cout << v << " ";
        q.pop();
        for(int i = 1;i<=N;i++)
        {
            if(visit[i] == false || node[v][i] == false)
                continue;
            q.push(i);
            visit[i] = false;
        }  
    }
}
int main(void)
{
    cin >> N >> M >> V;
    for(int i = 1;i<=M;i++)
    {
        cin >> x >> y;
        node[x][y] = node[y][x] = true;
    }
    dfs(V);
    cout << "\n";
    bfs(V);
    return 0;
}